import React, { useReducer } from 'react';
import { Text, StyleSheet, ScrollView, View } from 'react-native';
import { LinearGradient } from 'expo-linear-gradient';
import AsyncStorage from '@react-native-async-storage/async-storage';
import ResetDataButton from '@/components/ResetProgressButton';
import { useRouter } from 'expo-router';

const hiragana = [
    ['„ÅÇ\na', '„ÅÑ\ni', '„ÅÜ\nu', '„Åà\ne', '„Åä\no'],
    ['„Åã\nka', '„Åç\nki', '„Åè\nku', '„Åë\nke', '„Åì\nko'],
    ['„Åï\nsa', '„Åó\nshi', '„Åô\nsu', '„Åõ\nse', '„Åù\nso'],
    ['„Åü\nta', '„Å°\nchi', '„Å§\ntsu', '„Å¶\nte', '„Å®\nto'],
    ['„Å™\nna', '„Å´\nni', '„Å¨\nnu', '„Å≠\nne', '„ÅÆ\nno'],
    ['„ÅØ\nha', '„Å≤\nhi', '„Åµ\nfu', '„Å∏\nhe', '„Åª\nho'],
    ['„Åæ\nma', '„Åø\nmi', '„ÇÄ\nmu', '„ÇÅ\nme', '„ÇÇ\nmo'],
    ['„ÇÑ\nya', '', '„ÇÜ\nyu', '', '„Çà\nyo'],
    ['„Çâ\nra', '„Çä\nri', '„Çã\nru', '„Çå\nre', '„Çç\nro'],
    ['„Çè\nwa', '', '', '', '„Çí\nwo'],
    ['„Çì\nn', '', '', '', ''],
];

const katakana = [
    ['„Ç¢\na', '„Ç§\ni', '„Ç¶\nu', '„Ç®\ne', '„Ç™\no'],
    ['„Ç´\nka', '„Ç≠\nki', '„ÇØ\nku', '„Ç±\nke', '„Ç≥\nko'],
    ['„Çµ\nsa', '„Ç∑\nshi', '„Çπ\nsu', '„Çª\nse', '„ÇΩ\nso'],
    ['„Çø\nta', '„ÉÅ\nchi', '„ÉÑ\ntsu', '„ÉÜ\nte', '„Éà\nto'],
    ['„Éä\nna', '„Éã\nni', '„Éå\nnu', '„Éç\nne', '„Éé\nno'],
    ['„Éè\nha', '„Éí\nhi', '„Éï\nfu', '„Éò\nhe', '„Éõ\nho'],
    ['„Éû\nma', '„Éü\nmi', '„É†\nmu', '„É°\nme', '„É¢\nmo'],
    ['„É§\nya', '', '„É¶\nyu', '', '„É®\nyo'],
    ['„É©\nra', '„É™\nri', '„É´\nru', '„É¨\nre', '„É≠\nro'],
    ['„ÉØ\nwa', '', '', '', '„É≤\nwo'],
    ['„É≥\nn', '', '', '', ''],
];

const hiraganaDakuten = [
    ['„Åå\nga', '„Åé\ngi', '„Åê\ngu', '„Åí\nge', '„Åî\ngo'],
    ['„Åñ\nza', '„Åò\nji', '„Åö\nzu', '„Åú\nze', '„Åû\nzo'],
    ['„Å†\nda', '„Å¢\nji', '„Å•\nzu', '„Åß\nde', '„Å©\ndo'],
    ['„Å∞\nba', '„Å≥\nbi', '„Å∂\nbu', '„Åπ\nbe', '„Åº\nbo'],
];

const hiraganaHandakuten = [
    ['„Å±\npa', '„Å¥\npi', '„Å∑\npu', '„Å∫\npe', '„ÅΩ\npo'],
];

const katakanaDakuten = [
    ['„Ç¨\nga', '„ÇÆ\ngi', '„Ç∞\ngu', '„Ç≤\nge', '„Ç¥\ngo'],
    ['„Ç∂\nza', '„Ç∏\nji', '„Ç∫\nzu', '„Çº\nze', '„Çæ\nzo'],
    ['„ÉÄ\nda', '„ÉÇ\nji', '„ÉÖ\nzu', '„Éá\nde', '„Éâ\ndo'],
    ['„Éê\nba', '„Éì\nbi', '„Éñ\nbu', '„Éô\nbe', '„Éú\nbo'],
];

const katakanaHandakuten = [
    ['„Éë\npa', '„Éî\npi', '„Éó\npu', '„Éö\npe', '„Éù\npo'],
];

const hiraganaYoon = [
    ['„Åç„ÇÉ\nkya', '„Åç„ÇÖ\nkyu', '„Åç„Çá\nkyo'],
    ['„Åó„ÇÉ\nsha', '„Åó„ÇÖ\nshu', '„Åó„Çá\nsho'],
    ['„Å°„ÇÉ\ncha', '„Å°„ÇÖ\nchu', '„Å°„Çá\ncho'],
    ['„Å´„ÇÉ\nnya', '„Å´„ÇÖ\nnyu', '„Å´„Çá\nnyo'],
    ['„Å≤„ÇÉ\nhya', '„Å≤„ÇÖ\nhyu', '„Å≤„Çá\nhyo'],
    ['„Åø„ÇÉ\nmya', '„Åø„ÇÖ\nmyu', '„Åø„Çá\nmyo'],
    ['„Çä„ÇÉ\nrya', '„Çä„ÇÖ\nryu', '„Çä„Çá\nryo'],
    ['„Åé„ÇÉ\ngya', '„Åé„ÇÖ\ngyu', '„Åé„Çá\ngyo'],
    ['„Åò„ÇÉ\nja', '„Åò„ÇÖ\nju', '„Åò„Çá\njo'],
    ['„Å¢„ÇÉ\nja', '„Å¢„ÇÖ\nju', '„Å¢„Çá\njo'], // Rarely used
    ['„Å≥„ÇÉ\nbya', '„Å≥„ÇÖ\nbyu', '„Å≥„Çá\nbyo'],
    ['„Å¥„ÇÉ\npya', '„Å¥„ÇÖ\npyu', '„Å¥„Çá\npyo'],
];

const katakanaYoon = [
    ['„Ç≠„É£\nkya', '„Ç≠„É•\nkyu', '„Ç≠„Éß\nkyo'],
    ['„Ç∑„É£\nsha', '„Ç∑„É•\nshu', '„Ç∑„Éß\nsho'],
    ['„ÉÅ„É£\ncha', '„ÉÅ„É•\nchu', '„ÉÅ„Éß\ncho'],
    ['„Éã„É£\nnya', '„Éã„É•\nnyu', '„Éã„Éß\nnyo'],
    ['„Éí„É£\nhya', '„Éí„É•\nhyu', '„Éí„Éß\nhyo'],
    ['„Éü„É£\nmya', '„Éü„É•\nmyu', '„Éü„Éß\nmyo'],
    ['„É™„É£\nrya', '„É™„É•\nryu', '„É™„Éß\nryo'],
    ['„ÇÆ„É£\ngya', '„ÇÆ„É•\ngyu', '„ÇÆ„Éß\ngyo'],
    ['„Ç∏„É£\nja', '„Ç∏„É•\nju', '„Ç∏„Éß\njo'],
    ['„ÉÇ„É£\nja', '„ÉÇ„É•\nju', '„ÉÇ„Éß\njo'], // Rarely used
    ['„Éì„É£\nbya', '„Éì„É•\nbyu', '„Éì„Éß\nbyo'],
    ['„Éî„É£\npya', '„Éî„É•\npyu', '„Éî„Éß\npyo'],
];


interface Props {
    data: string[][]
}


const Table = ({ data }: Props) => (
    <View style={styles.tableContainer}>
        {
            data.map((row, rowIndex) => (
                <View key={rowIndex} style={styles.row}>
                    {
                        row.map((item, columnIndex) => (
                            <View key={columnIndex} style={styles.column}>
                                <Text style={[styles.text, styles.cellText]}>
                                    {item}
                                </Text>
                            </View>
                        ))
                    }
                </View>
            ))
        }
    </View>
);

const Review = () => {
    const router = useRouter();

    const handleReset = async () => {
        // remove setting
        try {
            await AsyncStorage.removeItem('doNotShowWelcome');
        } catch (e: unknown) {
            if (e instanceof Error) {
                console.error(e.message);
            }
        }

        // go back to welcome screen
        router.push('/');
    };

    return (
        <LinearGradient
            colors={["#8166E2", "#ABA1A1"]}
            style={styles.container}>
            <ScrollView>
                <Text style={styles.title}>Awesome</Text>
                <Text style={[styles.text, styles.h1]}>You've made it!</Text>
                <Text style={styles.text}>
                    Now let's see we've just learned{"\n"}
                </Text>

                <Text style={styles.text}>
                    ‚ö° Hiragana{"\n"}
                    The most fundamental characters (notice in the table below, each column in the first row is a{" "}
                    <Text style={[styles.text, styles.emphasis]}>vowel</Text> and each row below stats with a{" "}
                    <Text style={[styles.text, styles.emphasis]}>consonant</Text>. „Çì, however, is special.
                    There are {" "}
                    <Text style={[styles.text, styles.emphasis]}>46</Text> of these.
                </Text>

                <Table data={hiragana} />

                <Text style={styles.text}>
                    ‚ö° Katakana:{"\n"}
                    These are the more angular counterpart to hiragana. They are most commonly used for foreign names/words,
                    technical terms, and onomatopoeia. Pronunciation wise, they are completely the same as the hiragana.
                </Text>

                <Table data={katakana} />

                <Text style={styles.text}>
                    ‚ö° Dakuten:{"\n"}
                    If you look carefully, you will see the little two dots (
                    <Text style={[styles.text, styles.emphasis]}>„Çõ</Text>
                    ) to the upper right of the character,
                    which renders them pronunced differently.
                </Text>

                <Table data={hiraganaDakuten} />
                <Table data={katakanaDakuten} />

                <Text style={styles.text}>
                    ‚ö° Handakuten:{"\n"}
                    The same goes with handakuten. But this time, characters are marked with what looks like a circle (
                    <Text style={[styles.text, styles.emphasis]}>„Çú</Text>
                    ).
                </Text>

                <Table data={hiraganaHandakuten} />
                <Table data={katakanaHandakuten} />

                <Text style={styles.text}>
                    ‚ö° Y≈çon:{"\n"}
                    You can combine the{" "}
                    <Text style={[styles.text, styles.emphasis]}>i-column</Text> with each {" "}
                    <Text style={[styles.text, styles.emphasis]}>consonant row</Text>{" "}
                    (along with their Dakunten and Handakuten variants) to make what is called Y≈çon
                </Text>



                <Table data={hiraganaYoon} />
                <Table data={katakanaYoon} />

                <Text style={styles.text}>
                    üíØ All right! Now you are ready to move onto the next phase of your Japanese learning.
                    Congrats and Best of Luck!{"\n"}
                </Text>

                <Text style={styles.text}>
                    ‚òïÔ∏è Want to learn more about Japanes kana?
                    {"\n "}üåê https://en.wikipedia.org/wiki/Kana
                    {"\n "}üåê https://learnthekana.com/
                    {"\n "}üåê https://kana-quiz.tofugu.com/
                    {"\n "}üåê https://kana.pro/
                </Text>

                <ResetDataButton title="Start Over" style={styles.button} onReset={handleReset} />

            </ScrollView>
        </LinearGradient>
    );
};

const styles = StyleSheet.create({
    container: {
        padding: 10,
        width: "100%",
        height: "100%",
        paddingHorizontal: 20,
    },
    title: {
        paddingTop: 50,
        fontSize: 60,
        textAlign: "center",
        fontWeight: 100,
        color: '#fff',
    },
    text: {
        fontSize: 20,
        fontWeight: 200,
        color: '#fff',
        lineHeight: 30,
    },
    emphasis: {
        color: '#5A35DF',
        fontStyle: 'italic',
        fontWeight: 'bold'
    },
    h1: {
        marginBottom: 20,
        textAlign: 'center',
        fontSize: 24,
        marginTop: 10,
        padding: 5,
    },
    tableContainer: {
        flex: 1,
        padding: 10,
        margin: "auto",
    },
    row: {
        flexDirection: 'row',
        width: "100%",
    },
    column: {
        width: "20%",
        borderWidth: 0.2,
        borderColor: "#ccc",
        padding: 10,
        alignItems: 'center',
        justifyContent: 'center',
    },
    cellText: {
        color: 'white',
        textAlign: 'center',
        lineHeight: 20,
    },
    button: {
        marginVertical: 20,
        borderRadius: 25,
        backgroundColor: 'crimson',
        color: 'white',
        fontSize: 24,
    }
});

export default Review;


